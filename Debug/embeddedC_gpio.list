
embeddedC_gpio.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000a1c  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000b4c  08000b4c  00020040  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000b4c  08000b4c  00020040  2**0
                  CONTENTS
  4 .ARM          00000000  08000b4c  08000b4c  00020040  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b4c  08000b4c  00020040  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b4c  08000b4c  00010b4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b50  08000b50  00010b50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000040  20000000  08000b54  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000040  08000b94  00020040  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000005c  08000b94  0002005c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020040  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000c89  00000000  00000000  00020069  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000038b  00000000  00000000  00020cf2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00021080  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00021138  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000feb3  00000000  00000000  000211c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000e60  00000000  00000000  0003107b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00053b0c  00000000  00000000  00031edb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000859e7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000218  00000000  00000000  00085a38  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000040 	.word	0x20000040
 800014c:	00000000 	.word	0x00000000
 8000150:	08000b34 	.word	0x08000b34

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000044 	.word	0x20000044
 800016c:	08000b34 	.word	0x08000b34

08000170 <main>:
//void delay(void){
	//for(uint32_t i=0; i<500000 ; i++);
//}


int main(void){
 8000170:	b580      	push	{r7, lr}
 8000172:	b090      	sub	sp, #64	; 0x40
 8000174:	af00      	add	r7, sp, #0

	GPIO_PinConfig_t myGPIO, myGPIO2;
 	myGPIO.port = GPIOC;
 8000176:	4b1b      	ldr	r3, [pc, #108]	; (80001e4 <main+0x74>)
 8000178:	623b      	str	r3, [r7, #32]
	myGPIO.pin = 13;
 800017a:	230d      	movs	r3, #13
 800017c:	627b      	str	r3, [r7, #36]	; 0x24
	myGPIO.mode = OUTPUT_MODE;
 800017e:	2301      	movs	r3, #1
 8000180:	62bb      	str	r3, [r7, #40]	; 0x28
	myGPIO.mode_type = GPIO_OUT_PUSHPULL;
 8000182:	2300      	movs	r3, #0
 8000184:	62fb      	str	r3, [r7, #44]	; 0x2c
	myGPIO.speed = GPIO_MODE_OUT_50MHz;
 8000186:	2303      	movs	r3, #3
 8000188:	637b      	str	r3, [r7, #52]	; 0x34

	myGPIO2.port = GPIOA;
 800018a:	4b17      	ldr	r3, [pc, #92]	; (80001e8 <main+0x78>)
 800018c:	607b      	str	r3, [r7, #4]
	myGPIO2.pin = 5;
 800018e:	2305      	movs	r3, #5
 8000190:	60bb      	str	r3, [r7, #8]
	myGPIO2.mode = OUTPUT_MODE;
 8000192:	2301      	movs	r3, #1
 8000194:	60fb      	str	r3, [r7, #12]
	myGPIO2.mode_type = GPIO_OUT_PUSHPULL;
 8000196:	2300      	movs	r3, #0
 8000198:	613b      	str	r3, [r7, #16]
	myGPIO2.speed = GPIO_MODE_OUT_50MHz;
 800019a:	2303      	movs	r3, #3
 800019c:	61bb      	str	r3, [r7, #24]

	gpio_init(&myGPIO, ENABLE);
 800019e:	f107 0320 	add.w	r3, r7, #32
 80001a2:	2101      	movs	r1, #1
 80001a4:	4618      	mov	r0, r3
 80001a6:	f000 f85f 	bl	8000268 <gpio_init>
	gpio_init(&myGPIO2, ENABLE);
 80001aa:	1d3b      	adds	r3, r7, #4
 80001ac:	2101      	movs	r1, #1
 80001ae:	4618      	mov	r0, r3
 80001b0:	f000 f85a 	bl	8000268 <gpio_init>

	configure_gpio_interrupt(GPIOB, 4, RISING_EDGE);
 80001b4:	2200      	movs	r2, #0
 80001b6:	2104      	movs	r1, #4
 80001b8:	480c      	ldr	r0, [pc, #48]	; (80001ec <main+0x7c>)
 80001ba:	f000 fa17 	bl	80005ec <configure_gpio_interrupt>
	enable_gpio_interrupt(4, EXTI4_IRQn);
 80001be:	210a      	movs	r1, #10
 80001c0:	2004      	movs	r0, #4
 80001c2:	f000 fc37 	bl	8000a34 <enable_gpio_interrupt>

	while(1){
		gpio_toggle(GPIOC, 13);
 80001c6:	210d      	movs	r1, #13
 80001c8:	4806      	ldr	r0, [pc, #24]	; (80001e4 <main+0x74>)
 80001ca:	f000 f9fb 	bl	80005c4 <gpio_toggle>
		for(uint32_t i=0; i<500000 ; i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80001d2:	e002      	b.n	80001da <main+0x6a>
 80001d4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80001d6:	3301      	adds	r3, #1
 80001d8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80001da:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80001dc:	4a04      	ldr	r2, [pc, #16]	; (80001f0 <main+0x80>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <main+0x64>
		gpio_toggle(GPIOC, 13);
 80001e2:	e7f0      	b.n	80001c6 <main+0x56>
 80001e4:	40011000 	.word	0x40011000
 80001e8:	40010800 	.word	0x40010800
 80001ec:	40010c00 	.word	0x40010c00
 80001f0:	0007a11f 	.word	0x0007a11f

080001f4 <EXTI4_IRQHandler>:
}




void EXTI4_IRQHandler() {
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b082      	sub	sp, #8
 80001f8:	af00      	add	r7, sp, #0
	clear_gpio_interrupt(4);
 80001fa:	2004      	movs	r0, #4
 80001fc:	f000 fc36 	bl	8000a6c <clear_gpio_interrupt>
	gpio_toggle(GPIOA, 5);
 8000200:	2105      	movs	r1, #5
 8000202:	4809      	ldr	r0, [pc, #36]	; (8000228 <EXTI4_IRQHandler+0x34>)
 8000204:	f000 f9de 	bl	80005c4 <gpio_toggle>
	for(uint32_t i=0; i<500000 ; i++);
 8000208:	2300      	movs	r3, #0
 800020a:	607b      	str	r3, [r7, #4]
 800020c:	e002      	b.n	8000214 <EXTI4_IRQHandler+0x20>
 800020e:	687b      	ldr	r3, [r7, #4]
 8000210:	3301      	adds	r3, #1
 8000212:	607b      	str	r3, [r7, #4]
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	4a05      	ldr	r2, [pc, #20]	; (800022c <EXTI4_IRQHandler+0x38>)
 8000218:	4293      	cmp	r3, r2
 800021a:	d9f8      	bls.n	800020e <EXTI4_IRQHandler+0x1a>
}
 800021c:	bf00      	nop
 800021e:	bf00      	nop
 8000220:	3708      	adds	r7, #8
 8000222:	46bd      	mov	sp, r7
 8000224:	bd80      	pop	{r7, pc}
 8000226:	bf00      	nop
 8000228:	40010800 	.word	0x40010800
 800022c:	0007a11f 	.word	0x0007a11f

08000230 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000230:	b480      	push	{r7}
 8000232:	b083      	sub	sp, #12
 8000234:	af00      	add	r7, sp, #0
 8000236:	4603      	mov	r3, r0
 8000238:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800023a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800023e:	2b00      	cmp	r3, #0
 8000240:	db0b      	blt.n	800025a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000242:	79fb      	ldrb	r3, [r7, #7]
 8000244:	f003 021f 	and.w	r2, r3, #31
 8000248:	4906      	ldr	r1, [pc, #24]	; (8000264 <__NVIC_EnableIRQ+0x34>)
 800024a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800024e:	095b      	lsrs	r3, r3, #5
 8000250:	2001      	movs	r0, #1
 8000252:	fa00 f202 	lsl.w	r2, r0, r2
 8000256:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800025a:	bf00      	nop
 800025c:	370c      	adds	r7, #12
 800025e:	46bd      	mov	sp, r7
 8000260:	bc80      	pop	{r7}
 8000262:	4770      	bx	lr
 8000264:	e000e100 	.word	0xe000e100

08000268 <gpio_init>:
  * @return     : none
  * @note       : none
  */


void gpio_init(GPIO_PinConfig_t *pGPIOx, uint8_t EnorDi){
 8000268:	b580      	push	{r7, lr}
 800026a:	b082      	sub	sp, #8
 800026c:	af00      	add	r7, sp, #0
 800026e:	6078      	str	r0, [r7, #4]
 8000270:	460b      	mov	r3, r1
 8000272:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE){
 8000274:	78fb      	ldrb	r3, [r7, #3]
 8000276:	2b01      	cmp	r3, #1
 8000278:	d12f      	bne.n	80002da <gpio_init+0x72>
		if(pGPIOx->port == GPIOA){
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	4a3a      	ldr	r2, [pc, #232]	; (8000368 <gpio_init+0x100>)
 8000280:	4293      	cmp	r3, r2
 8000282:	d106      	bne.n	8000292 <gpio_init+0x2a>
			GPIOA_PCLK_EN;
 8000284:	4b39      	ldr	r3, [pc, #228]	; (800036c <gpio_init+0x104>)
 8000286:	699b      	ldr	r3, [r3, #24]
 8000288:	4a38      	ldr	r2, [pc, #224]	; (800036c <gpio_init+0x104>)
 800028a:	f043 0304 	orr.w	r3, r3, #4
 800028e:	6193      	str	r3, [r2, #24]
 8000290:	e052      	b.n	8000338 <gpio_init+0xd0>
		}else if(pGPIOx->port == GPIOB){
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	681b      	ldr	r3, [r3, #0]
 8000296:	4a36      	ldr	r2, [pc, #216]	; (8000370 <gpio_init+0x108>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <gpio_init+0x42>
			GPIOB_PCLK_EN;
 800029c:	4b33      	ldr	r3, [pc, #204]	; (800036c <gpio_init+0x104>)
 800029e:	699b      	ldr	r3, [r3, #24]
 80002a0:	4a32      	ldr	r2, [pc, #200]	; (800036c <gpio_init+0x104>)
 80002a2:	f043 0308 	orr.w	r3, r3, #8
 80002a6:	6193      	str	r3, [r2, #24]
 80002a8:	e046      	b.n	8000338 <gpio_init+0xd0>
		}else if(pGPIOx->port == GPIOC){
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	4a31      	ldr	r2, [pc, #196]	; (8000374 <gpio_init+0x10c>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d106      	bne.n	80002c2 <gpio_init+0x5a>
			GPIOC_PCLK_EN;
 80002b4:	4b2d      	ldr	r3, [pc, #180]	; (800036c <gpio_init+0x104>)
 80002b6:	699b      	ldr	r3, [r3, #24]
 80002b8:	4a2c      	ldr	r2, [pc, #176]	; (800036c <gpio_init+0x104>)
 80002ba:	f043 0310 	orr.w	r3, r3, #16
 80002be:	6193      	str	r3, [r2, #24]
 80002c0:	e03a      	b.n	8000338 <gpio_init+0xd0>
		}else if(pGPIOx->port == GPIOD){
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	4a2c      	ldr	r2, [pc, #176]	; (8000378 <gpio_init+0x110>)
 80002c8:	4293      	cmp	r3, r2
 80002ca:	d135      	bne.n	8000338 <gpio_init+0xd0>
			GPIOD_PCLK_EN;
 80002cc:	4b27      	ldr	r3, [pc, #156]	; (800036c <gpio_init+0x104>)
 80002ce:	699b      	ldr	r3, [r3, #24]
 80002d0:	4a26      	ldr	r2, [pc, #152]	; (800036c <gpio_init+0x104>)
 80002d2:	f043 0320 	orr.w	r3, r3, #32
 80002d6:	6193      	str	r3, [r2, #24]
 80002d8:	e02e      	b.n	8000338 <gpio_init+0xd0>
		}
	}else{
		if(pGPIOx->port == GPIOA){
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	4a22      	ldr	r2, [pc, #136]	; (8000368 <gpio_init+0x100>)
 80002e0:	4293      	cmp	r3, r2
 80002e2:	d106      	bne.n	80002f2 <gpio_init+0x8a>
			GPIOA_PCLK_DI;
 80002e4:	4b21      	ldr	r3, [pc, #132]	; (800036c <gpio_init+0x104>)
 80002e6:	699b      	ldr	r3, [r3, #24]
 80002e8:	4a20      	ldr	r2, [pc, #128]	; (800036c <gpio_init+0x104>)
 80002ea:	f023 0304 	bic.w	r3, r3, #4
 80002ee:	6193      	str	r3, [r2, #24]
 80002f0:	e022      	b.n	8000338 <gpio_init+0xd0>
		}else if(pGPIOx->port == GPIOB)	{
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	4a1e      	ldr	r2, [pc, #120]	; (8000370 <gpio_init+0x108>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <gpio_init+0xa2>
			GPIOB_PCLK_DI;
 80002fc:	4b1b      	ldr	r3, [pc, #108]	; (800036c <gpio_init+0x104>)
 80002fe:	699b      	ldr	r3, [r3, #24]
 8000300:	4a1a      	ldr	r2, [pc, #104]	; (800036c <gpio_init+0x104>)
 8000302:	f023 0308 	bic.w	r3, r3, #8
 8000306:	6193      	str	r3, [r2, #24]
 8000308:	e016      	b.n	8000338 <gpio_init+0xd0>
		}else if(pGPIOx->port == GPIOC){
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	4a19      	ldr	r2, [pc, #100]	; (8000374 <gpio_init+0x10c>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d106      	bne.n	8000322 <gpio_init+0xba>
			GPIOC_PCLK_DI;
 8000314:	4b15      	ldr	r3, [pc, #84]	; (800036c <gpio_init+0x104>)
 8000316:	699b      	ldr	r3, [r3, #24]
 8000318:	4a14      	ldr	r2, [pc, #80]	; (800036c <gpio_init+0x104>)
 800031a:	f023 0310 	bic.w	r3, r3, #16
 800031e:	6193      	str	r3, [r2, #24]
 8000320:	e00a      	b.n	8000338 <gpio_init+0xd0>
		}else if(pGPIOx->port == GPIOD){
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	4a14      	ldr	r2, [pc, #80]	; (8000378 <gpio_init+0x110>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d105      	bne.n	8000338 <gpio_init+0xd0>
			GPIOD_PCLK_DI;
 800032c:	4b0f      	ldr	r3, [pc, #60]	; (800036c <gpio_init+0x104>)
 800032e:	699b      	ldr	r3, [r3, #24]
 8000330:	4a0e      	ldr	r2, [pc, #56]	; (800036c <gpio_init+0x104>)
 8000332:	f023 0320 	bic.w	r3, r3, #32
 8000336:	6193      	str	r3, [r2, #24]
		}
	}

	config_pin(pGPIOx->port, pGPIOx->pin, pGPIOx->mode_type);
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	6818      	ldr	r0, [r3, #0]
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	6859      	ldr	r1, [r3, #4]
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	68db      	ldr	r3, [r3, #12]
 8000344:	461a      	mov	r2, r3
 8000346:	f000 f819 	bl	800037c <config_pin>
	config_pin_speed(pGPIOx->port, pGPIOx->pin, pGPIOx->speed, pGPIOx->mode);
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	6818      	ldr	r0, [r3, #0]
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	6859      	ldr	r1, [r3, #4]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	695a      	ldr	r2, [r3, #20]
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	689b      	ldr	r3, [r3, #8]
 800035a:	f000 f8db 	bl	8000514 <config_pin_speed>
}
 800035e:	bf00      	nop
 8000360:	3708      	adds	r7, #8
 8000362:	46bd      	mov	sp, r7
 8000364:	bd80      	pop	{r7, pc}
 8000366:	bf00      	nop
 8000368:	40010800 	.word	0x40010800
 800036c:	40021000 	.word	0x40021000
 8000370:	40010c00 	.word	0x40010c00
 8000374:	40011000 	.word	0x40011000
 8000378:	40011400 	.word	0x40011400

0800037c <config_pin>:

void config_pin (GPIO_TypeDef *pGPIOx, uint32_t pinNumber, uint32_t mode_type){
 800037c:	b480      	push	{r7}
 800037e:	b085      	sub	sp, #20
 8000380:	af00      	add	r7, sp, #0
 8000382:	60f8      	str	r0, [r7, #12]
 8000384:	60b9      	str	r1, [r7, #8]
 8000386:	607a      	str	r2, [r7, #4]
	if(pinNumber >= 8){ // CONTROL HIGH REGISTER
 8000388:	68bb      	ldr	r3, [r7, #8]
 800038a:	2b07      	cmp	r3, #7
 800038c:	d95d      	bls.n	800044a <config_pin+0xce>
		switch(mode_type){
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	2b03      	cmp	r3, #3
 8000392:	f200 80b8 	bhi.w	8000506 <config_pin+0x18a>
 8000396:	a201      	add	r2, pc, #4	; (adr r2, 800039c <config_pin+0x20>)
 8000398:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800039c:	080003ad 	.word	0x080003ad
 80003a0:	080003db 	.word	0x080003db
 80003a4:	08000413 	.word	0x08000413
 80003a8:	0800042f 	.word	0x0800042f
			case GPIO_OUT_PUSHPULL | GPIO_ANALOG_MODE:
				pGPIOx->CRH &= ~((1 << CNF_POS_BIT1) | (1<<CNF_POS_BIT2));
 80003ac:	68fb      	ldr	r3, [r7, #12]
 80003ae:	685b      	ldr	r3, [r3, #4]
 80003b0:	4957      	ldr	r1, [pc, #348]	; (8000510 <config_pin+0x194>)
 80003b2:	68ba      	ldr	r2, [r7, #8]
 80003b4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80003b8:	3202      	adds	r2, #2
 80003ba:	2101      	movs	r1, #1
 80003bc:	4091      	lsls	r1, r2
 80003be:	4854      	ldr	r0, [pc, #336]	; (8000510 <config_pin+0x194>)
 80003c0:	68ba      	ldr	r2, [r7, #8]
 80003c2:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80003c6:	3203      	adds	r2, #3
 80003c8:	2001      	movs	r0, #1
 80003ca:	fa00 f202 	lsl.w	r2, r0, r2
 80003ce:	430a      	orrs	r2, r1
 80003d0:	43d2      	mvns	r2, r2
 80003d2:	401a      	ands	r2, r3
 80003d4:	68fb      	ldr	r3, [r7, #12]
 80003d6:	605a      	str	r2, [r3, #4]
				break;
 80003d8:	e095      	b.n	8000506 <config_pin+0x18a>
			case GPIO_OUT_OPENDRAIN | GPIO_FLOATING_IN:
				pGPIOx->CRH &= ~( 1 << CNF_POS_BIT2);
 80003da:	68fb      	ldr	r3, [r7, #12]
 80003dc:	685b      	ldr	r3, [r3, #4]
 80003de:	494c      	ldr	r1, [pc, #304]	; (8000510 <config_pin+0x194>)
 80003e0:	68ba      	ldr	r2, [r7, #8]
 80003e2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80003e6:	3203      	adds	r2, #3
 80003e8:	2101      	movs	r1, #1
 80003ea:	fa01 f202 	lsl.w	r2, r1, r2
 80003ee:	43d2      	mvns	r2, r2
 80003f0:	401a      	ands	r2, r3
 80003f2:	68fb      	ldr	r3, [r7, #12]
 80003f4:	605a      	str	r2, [r3, #4]
				pGPIOx->CRH |= (1 << CNF_POS_BIT1);
 80003f6:	68fb      	ldr	r3, [r7, #12]
 80003f8:	685b      	ldr	r3, [r3, #4]
 80003fa:	4945      	ldr	r1, [pc, #276]	; (8000510 <config_pin+0x194>)
 80003fc:	68ba      	ldr	r2, [r7, #8]
 80003fe:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000402:	3202      	adds	r2, #2
 8000404:	2101      	movs	r1, #1
 8000406:	fa01 f202 	lsl.w	r2, r1, r2
 800040a:	431a      	orrs	r2, r3
 800040c:	68fb      	ldr	r3, [r7, #12]
 800040e:	605a      	str	r2, [r3, #4]
				break;
 8000410:	e079      	b.n	8000506 <config_pin+0x18a>
			case GPIO_ALTFN_OUT_PUSHPULL | GPIO_IN_PUPD:
				pGPIOx->CRH |= GPIO_ALTFN_OUT_PUSHPULL << (CNF_POS_BIT1);
 8000412:	68fb      	ldr	r3, [r7, #12]
 8000414:	685a      	ldr	r2, [r3, #4]
 8000416:	493e      	ldr	r1, [pc, #248]	; (8000510 <config_pin+0x194>)
 8000418:	68bb      	ldr	r3, [r7, #8]
 800041a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800041e:	3302      	adds	r3, #2
 8000420:	2102      	movs	r1, #2
 8000422:	fa01 f303 	lsl.w	r3, r1, r3
 8000426:	431a      	orrs	r2, r3
 8000428:	68fb      	ldr	r3, [r7, #12]
 800042a:	605a      	str	r2, [r3, #4]
				break;
 800042c:	e06b      	b.n	8000506 <config_pin+0x18a>
			case GPIO_ALTFN_OUT_OPENDRAIN:
					pGPIOx->CRH |= GPIO_ALTFN_OUT_OPENDRAIN << (CNF_POS_BIT1);
 800042e:	68fb      	ldr	r3, [r7, #12]
 8000430:	685a      	ldr	r2, [r3, #4]
 8000432:	4937      	ldr	r1, [pc, #220]	; (8000510 <config_pin+0x194>)
 8000434:	68bb      	ldr	r3, [r7, #8]
 8000436:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800043a:	3302      	adds	r3, #2
 800043c:	2103      	movs	r1, #3
 800043e:	fa01 f303 	lsl.w	r3, r1, r3
 8000442:	431a      	orrs	r2, r3
 8000444:	68fb      	ldr	r3, [r7, #12]
 8000446:	605a      	str	r2, [r3, #4]
				break;
 8000448:	e05d      	b.n	8000506 <config_pin+0x18a>
		}
	}else{ // CONTROL LOW REGISTER
		switch(mode_type){
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	2b03      	cmp	r3, #3
 800044e:	d85a      	bhi.n	8000506 <config_pin+0x18a>
 8000450:	a201      	add	r2, pc, #4	; (adr r2, 8000458 <config_pin+0xdc>)
 8000452:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000456:	bf00      	nop
 8000458:	08000469 	.word	0x08000469
 800045c:	08000497 	.word	0x08000497
 8000460:	080004cf 	.word	0x080004cf
 8000464:	080004eb 	.word	0x080004eb
			case GPIO_OUT_PUSHPULL | GPIO_ANALOG_MODE:
				pGPIOx->CRL &= ~((1 << CNF_POS_BIT1) | (1<<CNF_POS_BIT2));
 8000468:	68fb      	ldr	r3, [r7, #12]
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	4928      	ldr	r1, [pc, #160]	; (8000510 <config_pin+0x194>)
 800046e:	68ba      	ldr	r2, [r7, #8]
 8000470:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000474:	3202      	adds	r2, #2
 8000476:	2101      	movs	r1, #1
 8000478:	4091      	lsls	r1, r2
 800047a:	4825      	ldr	r0, [pc, #148]	; (8000510 <config_pin+0x194>)
 800047c:	68ba      	ldr	r2, [r7, #8]
 800047e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8000482:	3203      	adds	r2, #3
 8000484:	2001      	movs	r0, #1
 8000486:	fa00 f202 	lsl.w	r2, r0, r2
 800048a:	430a      	orrs	r2, r1
 800048c:	43d2      	mvns	r2, r2
 800048e:	401a      	ands	r2, r3
 8000490:	68fb      	ldr	r3, [r7, #12]
 8000492:	601a      	str	r2, [r3, #0]
				break;
 8000494:	e037      	b.n	8000506 <config_pin+0x18a>
			case GPIO_OUT_OPENDRAIN | GPIO_FLOATING_IN:
				pGPIOx->CRL &= ~( 1 << CNF_POS_BIT2);
 8000496:	68fb      	ldr	r3, [r7, #12]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	491d      	ldr	r1, [pc, #116]	; (8000510 <config_pin+0x194>)
 800049c:	68ba      	ldr	r2, [r7, #8]
 800049e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80004a2:	3203      	adds	r2, #3
 80004a4:	2101      	movs	r1, #1
 80004a6:	fa01 f202 	lsl.w	r2, r1, r2
 80004aa:	43d2      	mvns	r2, r2
 80004ac:	401a      	ands	r2, r3
 80004ae:	68fb      	ldr	r3, [r7, #12]
 80004b0:	601a      	str	r2, [r3, #0]
				pGPIOx->CRL |= (1 << CNF_POS_BIT1);
 80004b2:	68fb      	ldr	r3, [r7, #12]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	4916      	ldr	r1, [pc, #88]	; (8000510 <config_pin+0x194>)
 80004b8:	68ba      	ldr	r2, [r7, #8]
 80004ba:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80004be:	3202      	adds	r2, #2
 80004c0:	2101      	movs	r1, #1
 80004c2:	fa01 f202 	lsl.w	r2, r1, r2
 80004c6:	431a      	orrs	r2, r3
 80004c8:	68fb      	ldr	r3, [r7, #12]
 80004ca:	601a      	str	r2, [r3, #0]
				break;
 80004cc:	e01b      	b.n	8000506 <config_pin+0x18a>
			case GPIO_ALTFN_OUT_PUSHPULL | GPIO_IN_PUPD:
				pGPIOx->CRL |= GPIO_ALTFN_OUT_PUSHPULL << (CNF_POS_BIT1);
 80004ce:	68fb      	ldr	r3, [r7, #12]
 80004d0:	681a      	ldr	r2, [r3, #0]
 80004d2:	490f      	ldr	r1, [pc, #60]	; (8000510 <config_pin+0x194>)
 80004d4:	68bb      	ldr	r3, [r7, #8]
 80004d6:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80004da:	3302      	adds	r3, #2
 80004dc:	2102      	movs	r1, #2
 80004de:	fa01 f303 	lsl.w	r3, r1, r3
 80004e2:	431a      	orrs	r2, r3
 80004e4:	68fb      	ldr	r3, [r7, #12]
 80004e6:	601a      	str	r2, [r3, #0]
				break;
 80004e8:	e00d      	b.n	8000506 <config_pin+0x18a>
			case GPIO_ALTFN_OUT_OPENDRAIN:
				pGPIOx->CRL |= GPIO_ALTFN_OUT_OPENDRAIN << (CNF_POS_BIT1);
 80004ea:	68fb      	ldr	r3, [r7, #12]
 80004ec:	681a      	ldr	r2, [r3, #0]
 80004ee:	4908      	ldr	r1, [pc, #32]	; (8000510 <config_pin+0x194>)
 80004f0:	68bb      	ldr	r3, [r7, #8]
 80004f2:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80004f6:	3302      	adds	r3, #2
 80004f8:	2103      	movs	r1, #3
 80004fa:	fa01 f303 	lsl.w	r3, r1, r3
 80004fe:	431a      	orrs	r2, r3
 8000500:	68fb      	ldr	r3, [r7, #12]
 8000502:	601a      	str	r2, [r3, #0]
				break;
 8000504:	bf00      	nop
		}
	}
}
 8000506:	bf00      	nop
 8000508:	3714      	adds	r7, #20
 800050a:	46bd      	mov	sp, r7
 800050c:	bc80      	pop	{r7}
 800050e:	4770      	bx	lr
 8000510:	20000000 	.word	0x20000000

08000514 <config_pin_speed>:

void config_pin_speed (GPIO_TypeDef *pGPIOx, uint32_t pinNumber, uint32_t pinSpeed, uint32_t mode){
 8000514:	b480      	push	{r7}
 8000516:	b085      	sub	sp, #20
 8000518:	af00      	add	r7, sp, #0
 800051a:	60f8      	str	r0, [r7, #12]
 800051c:	60b9      	str	r1, [r7, #8]
 800051e:	607a      	str	r2, [r7, #4]
 8000520:	603b      	str	r3, [r7, #0]

	if(pinNumber >= 8){
 8000522:	68bb      	ldr	r3, [r7, #8]
 8000524:	2b07      	cmp	r3, #7
 8000526:	d921      	bls.n	800056c <config_pin_speed+0x58>
		if(mode == INPUT_MODE)
 8000528:	683b      	ldr	r3, [r7, #0]
 800052a:	2b02      	cmp	r3, #2
 800052c:	d115      	bne.n	800055a <config_pin_speed+0x46>
			pGPIOx->CRH &= ~ (1 << (PINPOS[pinNumber]) |  1 << (PINPOS[pinNumber] +1) );
 800052e:	68fb      	ldr	r3, [r7, #12]
 8000530:	685b      	ldr	r3, [r3, #4]
 8000532:	4923      	ldr	r1, [pc, #140]	; (80005c0 <config_pin_speed+0xac>)
 8000534:	68ba      	ldr	r2, [r7, #8]
 8000536:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800053a:	2101      	movs	r1, #1
 800053c:	4091      	lsls	r1, r2
 800053e:	4820      	ldr	r0, [pc, #128]	; (80005c0 <config_pin_speed+0xac>)
 8000540:	68ba      	ldr	r2, [r7, #8]
 8000542:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8000546:	3201      	adds	r2, #1
 8000548:	2001      	movs	r0, #1
 800054a:	fa00 f202 	lsl.w	r2, r0, r2
 800054e:	430a      	orrs	r2, r1
 8000550:	43d2      	mvns	r2, r2
 8000552:	401a      	ands	r2, r3
 8000554:	68fb      	ldr	r3, [r7, #12]
 8000556:	605a      	str	r2, [r3, #4]
		if(mode == INPUT_MODE)
			pGPIOx->CRL &= ~ (1 << (PINPOS[pinNumber]) |  1 << (PINPOS[pinNumber] +1) );
		else
			pGPIOx->CRL |= (pinSpeed << (PINPOS[pinNumber]));
	}
}
 8000558:	e02d      	b.n	80005b6 <config_pin_speed+0xa2>
			pGPIOx->CRH = (pinSpeed << (PINPOS[pinNumber]));
 800055a:	4a19      	ldr	r2, [pc, #100]	; (80005c0 <config_pin_speed+0xac>)
 800055c:	68bb      	ldr	r3, [r7, #8]
 800055e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000562:	687a      	ldr	r2, [r7, #4]
 8000564:	409a      	lsls	r2, r3
 8000566:	68fb      	ldr	r3, [r7, #12]
 8000568:	605a      	str	r2, [r3, #4]
}
 800056a:	e024      	b.n	80005b6 <config_pin_speed+0xa2>
		if(mode == INPUT_MODE)
 800056c:	683b      	ldr	r3, [r7, #0]
 800056e:	2b02      	cmp	r3, #2
 8000570:	d115      	bne.n	800059e <config_pin_speed+0x8a>
			pGPIOx->CRL &= ~ (1 << (PINPOS[pinNumber]) |  1 << (PINPOS[pinNumber] +1) );
 8000572:	68fb      	ldr	r3, [r7, #12]
 8000574:	681b      	ldr	r3, [r3, #0]
 8000576:	4912      	ldr	r1, [pc, #72]	; (80005c0 <config_pin_speed+0xac>)
 8000578:	68ba      	ldr	r2, [r7, #8]
 800057a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800057e:	2101      	movs	r1, #1
 8000580:	4091      	lsls	r1, r2
 8000582:	480f      	ldr	r0, [pc, #60]	; (80005c0 <config_pin_speed+0xac>)
 8000584:	68ba      	ldr	r2, [r7, #8]
 8000586:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800058a:	3201      	adds	r2, #1
 800058c:	2001      	movs	r0, #1
 800058e:	fa00 f202 	lsl.w	r2, r0, r2
 8000592:	430a      	orrs	r2, r1
 8000594:	43d2      	mvns	r2, r2
 8000596:	401a      	ands	r2, r3
 8000598:	68fb      	ldr	r3, [r7, #12]
 800059a:	601a      	str	r2, [r3, #0]
}
 800059c:	e00b      	b.n	80005b6 <config_pin_speed+0xa2>
			pGPIOx->CRL |= (pinSpeed << (PINPOS[pinNumber]));
 800059e:	68fb      	ldr	r3, [r7, #12]
 80005a0:	681a      	ldr	r2, [r3, #0]
 80005a2:	4907      	ldr	r1, [pc, #28]	; (80005c0 <config_pin_speed+0xac>)
 80005a4:	68bb      	ldr	r3, [r7, #8]
 80005a6:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80005aa:	6879      	ldr	r1, [r7, #4]
 80005ac:	fa01 f303 	lsl.w	r3, r1, r3
 80005b0:	431a      	orrs	r2, r3
 80005b2:	68fb      	ldr	r3, [r7, #12]
 80005b4:	601a      	str	r2, [r3, #0]
}
 80005b6:	bf00      	nop
 80005b8:	3714      	adds	r7, #20
 80005ba:	46bd      	mov	sp, r7
 80005bc:	bc80      	pop	{r7}
 80005be:	4770      	bx	lr
 80005c0:	20000000 	.word	0x20000000

080005c4 <gpio_toggle>:
	return value;
}



void gpio_toggle(GPIO_TypeDef *pGPIOx, uint32_t pinNumber){
 80005c4:	b480      	push	{r7}
 80005c6:	b083      	sub	sp, #12
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	6078      	str	r0, [r7, #4]
 80005cc:	6039      	str	r1, [r7, #0]

	pGPIOx->ODR ^=(1<<pinNumber);
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	68db      	ldr	r3, [r3, #12]
 80005d2:	2101      	movs	r1, #1
 80005d4:	683a      	ldr	r2, [r7, #0]
 80005d6:	fa01 f202 	lsl.w	r2, r1, r2
 80005da:	405a      	eors	r2, r3
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	60da      	str	r2, [r3, #12]

}
 80005e0:	bf00      	nop
 80005e2:	370c      	adds	r7, #12
 80005e4:	46bd      	mov	sp, r7
 80005e6:	bc80      	pop	{r7}
 80005e8:	4770      	bx	lr
	...

080005ec <configure_gpio_interrupt>:


void configure_gpio_interrupt(GPIO_TypeDef *pGPIOx, uint32_t pinNumber, edge_select edge){
 80005ec:	b480      	push	{r7}
 80005ee:	b085      	sub	sp, #20
 80005f0:	af00      	add	r7, sp, #0
 80005f2:	60f8      	str	r0, [r7, #12]
 80005f4:	60b9      	str	r1, [r7, #8]
 80005f6:	4613      	mov	r3, r2
 80005f8:	71fb      	strb	r3, [r7, #7]
	//GPIO_PCLK_EN_ALT_FUNC();
	RCC->APB2ENR |= (1<<0);
 80005fa:	4ba9      	ldr	r3, [pc, #676]	; (80008a0 <configure_gpio_interrupt+0x2b4>)
 80005fc:	699b      	ldr	r3, [r3, #24]
 80005fe:	4aa8      	ldr	r2, [pc, #672]	; (80008a0 <configure_gpio_interrupt+0x2b4>)
 8000600:	f043 0301 	orr.w	r3, r3, #1
 8000604:	6193      	str	r3, [r2, #24]

	if(pGPIOx == GPIOA){
 8000606:	68fb      	ldr	r3, [r7, #12]
 8000608:	4aa6      	ldr	r2, [pc, #664]	; (80008a4 <configure_gpio_interrupt+0x2b8>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d166      	bne.n	80006dc <configure_gpio_interrupt+0xf0>
		switch(pinNumber)
 800060e:	68bb      	ldr	r3, [r7, #8]
 8000610:	2b0f      	cmp	r3, #15
 8000612:	d865      	bhi.n	80006e0 <configure_gpio_interrupt+0xf4>
 8000614:	a201      	add	r2, pc, #4	; (adr r2, 800061c <configure_gpio_interrupt+0x30>)
 8000616:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800061a:	bf00      	nop
 800061c:	0800065d 	.word	0x0800065d
 8000620:	08000665 	.word	0x08000665
 8000624:	0800066d 	.word	0x0800066d
 8000628:	08000675 	.word	0x08000675
 800062c:	0800067d 	.word	0x0800067d
 8000630:	08000685 	.word	0x08000685
 8000634:	0800068d 	.word	0x0800068d
 8000638:	08000695 	.word	0x08000695
 800063c:	0800069d 	.word	0x0800069d
 8000640:	080006a5 	.word	0x080006a5
 8000644:	080006ad 	.word	0x080006ad
 8000648:	080006b5 	.word	0x080006b5
 800064c:	080006bd 	.word	0x080006bd
 8000650:	080006c5 	.word	0x080006c5
 8000654:	080006cd 	.word	0x080006cd
 8000658:	080006d5 	.word	0x080006d5
		{
			case 0:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PA;
 800065c:	4b92      	ldr	r3, [pc, #584]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800065e:	2200      	movs	r2, #0
 8000660:	609a      	str	r2, [r3, #8]
				break;
 8000662:	e03e      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 1:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI1_PA;
 8000664:	4b90      	ldr	r3, [pc, #576]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000666:	2200      	movs	r2, #0
 8000668:	609a      	str	r2, [r3, #8]
				break;
 800066a:	e03a      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 2:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI2_PA;
 800066c:	4b8e      	ldr	r3, [pc, #568]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800066e:	2200      	movs	r2, #0
 8000670:	609a      	str	r2, [r3, #8]
				break;
 8000672:	e036      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 3:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI3_PA;
 8000674:	4b8c      	ldr	r3, [pc, #560]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000676:	2200      	movs	r2, #0
 8000678:	609a      	str	r2, [r3, #8]
				break;
 800067a:	e032      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 4:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI4_PA;
 800067c:	4b8a      	ldr	r3, [pc, #552]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800067e:	2200      	movs	r2, #0
 8000680:	60da      	str	r2, [r3, #12]
				break;
 8000682:	e02e      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 5:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI5_PA;
 8000684:	4b88      	ldr	r3, [pc, #544]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000686:	2200      	movs	r2, #0
 8000688:	60da      	str	r2, [r3, #12]
				break;
 800068a:	e02a      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 6:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI6_PA;
 800068c:	4b86      	ldr	r3, [pc, #536]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800068e:	2200      	movs	r2, #0
 8000690:	60da      	str	r2, [r3, #12]
				break;
 8000692:	e026      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 7:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI7_PA;
 8000694:	4b84      	ldr	r3, [pc, #528]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000696:	2200      	movs	r2, #0
 8000698:	60da      	str	r2, [r3, #12]
				break;
 800069a:	e022      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 8:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI8_PA;
 800069c:	4b82      	ldr	r3, [pc, #520]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800069e:	2200      	movs	r2, #0
 80006a0:	611a      	str	r2, [r3, #16]
				break;
 80006a2:	e01e      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 9:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI9_PA;
 80006a4:	4b80      	ldr	r3, [pc, #512]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80006a6:	2200      	movs	r2, #0
 80006a8:	611a      	str	r2, [r3, #16]
				break;
 80006aa:	e01a      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 10:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI10_PA;
 80006ac:	4b7e      	ldr	r3, [pc, #504]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80006ae:	2200      	movs	r2, #0
 80006b0:	611a      	str	r2, [r3, #16]
				break;
 80006b2:	e016      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 11:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI11_PA;
 80006b4:	4b7c      	ldr	r3, [pc, #496]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80006b6:	2200      	movs	r2, #0
 80006b8:	611a      	str	r2, [r3, #16]
				break;
 80006ba:	e012      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 12:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI12_PA;
 80006bc:	4b7a      	ldr	r3, [pc, #488]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80006be:	2200      	movs	r2, #0
 80006c0:	615a      	str	r2, [r3, #20]
				break;
 80006c2:	e00e      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 13:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI13_PA;
 80006c4:	4b78      	ldr	r3, [pc, #480]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80006c6:	2200      	movs	r2, #0
 80006c8:	615a      	str	r2, [r3, #20]
				break;
 80006ca:	e00a      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 14:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI14_PA;
 80006cc:	4b76      	ldr	r3, [pc, #472]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80006ce:	2200      	movs	r2, #0
 80006d0:	615a      	str	r2, [r3, #20]
				break;
 80006d2:	e006      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			case 15:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI15_PA;
 80006d4:	4b74      	ldr	r3, [pc, #464]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80006d6:	2200      	movs	r2, #0
 80006d8:	615a      	str	r2, [r3, #20]
				break;
 80006da:	e002      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
			default:
				break;
		}
	}
 80006dc:	bf00      	nop
 80006de:	e000      	b.n	80006e2 <configure_gpio_interrupt+0xf6>
				break;
 80006e0:	bf00      	nop

	if(pGPIOx == GPIOB){
 80006e2:	68fb      	ldr	r3, [r7, #12]
 80006e4:	4a71      	ldr	r2, [pc, #452]	; (80008ac <configure_gpio_interrupt+0x2c0>)
 80006e6:	4293      	cmp	r3, r2
 80006e8:	d16e      	bne.n	80007c8 <configure_gpio_interrupt+0x1dc>
		switch(pinNumber)
 80006ea:	68bb      	ldr	r3, [r7, #8]
 80006ec:	2b0f      	cmp	r3, #15
 80006ee:	d86d      	bhi.n	80007cc <configure_gpio_interrupt+0x1e0>
 80006f0:	a201      	add	r2, pc, #4	; (adr r2, 80006f8 <configure_gpio_interrupt+0x10c>)
 80006f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80006f6:	bf00      	nop
 80006f8:	08000739 	.word	0x08000739
 80006fc:	08000741 	.word	0x08000741
 8000700:	08000749 	.word	0x08000749
 8000704:	08000753 	.word	0x08000753
 8000708:	0800075d 	.word	0x0800075d
 800070c:	08000765 	.word	0x08000765
 8000710:	0800076d 	.word	0x0800076d
 8000714:	08000777 	.word	0x08000777
 8000718:	08000781 	.word	0x08000781
 800071c:	08000789 	.word	0x08000789
 8000720:	08000791 	.word	0x08000791
 8000724:	0800079b 	.word	0x0800079b
 8000728:	080007a5 	.word	0x080007a5
 800072c:	080007ad 	.word	0x080007ad
 8000730:	080007b5 	.word	0x080007b5
 8000734:	080007bf 	.word	0x080007bf
		{
			case 0:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PB;
 8000738:	4b5b      	ldr	r3, [pc, #364]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800073a:	2201      	movs	r2, #1
 800073c:	609a      	str	r2, [r3, #8]
				break;
 800073e:	e046      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 1:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI1_PB;
 8000740:	4b59      	ldr	r3, [pc, #356]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000742:	2210      	movs	r2, #16
 8000744:	609a      	str	r2, [r3, #8]
				break;
 8000746:	e042      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 2:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI2_PB;
 8000748:	4b57      	ldr	r3, [pc, #348]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800074a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800074e:	609a      	str	r2, [r3, #8]
				break;
 8000750:	e03d      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 3:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI3_PB;
 8000752:	4b55      	ldr	r3, [pc, #340]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000754:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000758:	609a      	str	r2, [r3, #8]
				break;
 800075a:	e038      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 4:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI4_PB;
 800075c:	4b52      	ldr	r3, [pc, #328]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800075e:	2201      	movs	r2, #1
 8000760:	60da      	str	r2, [r3, #12]
				break;
 8000762:	e034      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 5:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI5_PB;
 8000764:	4b50      	ldr	r3, [pc, #320]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000766:	2210      	movs	r2, #16
 8000768:	60da      	str	r2, [r3, #12]
				break;
 800076a:	e030      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 6:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI6_PB;
 800076c:	4b4e      	ldr	r3, [pc, #312]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800076e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000772:	60da      	str	r2, [r3, #12]
				break;
 8000774:	e02b      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 7:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI7_PB;
 8000776:	4b4c      	ldr	r3, [pc, #304]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000778:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800077c:	60da      	str	r2, [r3, #12]
				break;
 800077e:	e026      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 8:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI8_PB;
 8000780:	4b49      	ldr	r3, [pc, #292]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000782:	2201      	movs	r2, #1
 8000784:	611a      	str	r2, [r3, #16]
				break;
 8000786:	e022      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 9:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI9_PB;
 8000788:	4b47      	ldr	r3, [pc, #284]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800078a:	2210      	movs	r2, #16
 800078c:	611a      	str	r2, [r3, #16]
				break;
 800078e:	e01e      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 10:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI10_PB;
 8000790:	4b45      	ldr	r3, [pc, #276]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000792:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000796:	611a      	str	r2, [r3, #16]
				break;
 8000798:	e019      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 11:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI11_PB;
 800079a:	4b43      	ldr	r3, [pc, #268]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800079c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80007a0:	611a      	str	r2, [r3, #16]
				break;
 80007a2:	e014      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 12:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI12_PB;
 80007a4:	4b40      	ldr	r3, [pc, #256]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80007a6:	2201      	movs	r2, #1
 80007a8:	615a      	str	r2, [r3, #20]
				break;
 80007aa:	e010      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 13:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI13_PB;
 80007ac:	4b3e      	ldr	r3, [pc, #248]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80007ae:	2210      	movs	r2, #16
 80007b0:	615a      	str	r2, [r3, #20]
				break;
 80007b2:	e00c      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 14:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI14_PB;
 80007b4:	4b3c      	ldr	r3, [pc, #240]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80007b6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80007ba:	615a      	str	r2, [r3, #20]
				break;
 80007bc:	e007      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			case 15:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI15_PB;
 80007be:	4b3a      	ldr	r3, [pc, #232]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 80007c0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80007c4:	615a      	str	r2, [r3, #20]
				break;
 80007c6:	e002      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
			default:
				break;
		}
	}
 80007c8:	bf00      	nop
 80007ca:	e000      	b.n	80007ce <configure_gpio_interrupt+0x1e2>
				break;
 80007cc:	bf00      	nop

	if(pGPIOx == GPIOC){
 80007ce:	68fb      	ldr	r3, [r7, #12]
 80007d0:	4a37      	ldr	r2, [pc, #220]	; (80008b0 <configure_gpio_interrupt+0x2c4>)
 80007d2:	4293      	cmp	r3, r2
 80007d4:	d178      	bne.n	80008c8 <configure_gpio_interrupt+0x2dc>
		switch(pinNumber)
 80007d6:	68bb      	ldr	r3, [r7, #8]
 80007d8:	2b0f      	cmp	r3, #15
 80007da:	d877      	bhi.n	80008cc <configure_gpio_interrupt+0x2e0>
 80007dc:	a201      	add	r2, pc, #4	; (adr r2, 80007e4 <configure_gpio_interrupt+0x1f8>)
 80007de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007e2:	bf00      	nop
 80007e4:	08000825 	.word	0x08000825
 80007e8:	0800082d 	.word	0x0800082d
 80007ec:	08000835 	.word	0x08000835
 80007f0:	0800083f 	.word	0x0800083f
 80007f4:	08000849 	.word	0x08000849
 80007f8:	08000851 	.word	0x08000851
 80007fc:	08000859 	.word	0x08000859
 8000800:	08000863 	.word	0x08000863
 8000804:	0800086d 	.word	0x0800086d
 8000808:	08000875 	.word	0x08000875
 800080c:	0800087d 	.word	0x0800087d
 8000810:	08000887 	.word	0x08000887
 8000814:	08000891 	.word	0x08000891
 8000818:	08000899 	.word	0x08000899
 800081c:	080008b5 	.word	0x080008b5
 8000820:	080008bf 	.word	0x080008bf
		{
			case 0:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PC;
 8000824:	4b20      	ldr	r3, [pc, #128]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000826:	2202      	movs	r2, #2
 8000828:	609a      	str	r2, [r3, #8]
				break;
 800082a:	e050      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 1:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI1_PC;
 800082c:	4b1e      	ldr	r3, [pc, #120]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800082e:	2220      	movs	r2, #32
 8000830:	609a      	str	r2, [r3, #8]
				break;
 8000832:	e04c      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 2:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI2_PC;
 8000834:	4b1c      	ldr	r3, [pc, #112]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000836:	f44f 7200 	mov.w	r2, #512	; 0x200
 800083a:	609a      	str	r2, [r3, #8]
				break;
 800083c:	e047      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 3:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI3_PC;
 800083e:	4b1a      	ldr	r3, [pc, #104]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000840:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000844:	609a      	str	r2, [r3, #8]
				break;
 8000846:	e042      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 4:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI4_PC;
 8000848:	4b17      	ldr	r3, [pc, #92]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800084a:	2202      	movs	r2, #2
 800084c:	60da      	str	r2, [r3, #12]
				break;
 800084e:	e03e      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 5:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI5_PC;
 8000850:	4b15      	ldr	r3, [pc, #84]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000852:	2220      	movs	r2, #32
 8000854:	60da      	str	r2, [r3, #12]
				break;
 8000856:	e03a      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 6:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI6_PC;
 8000858:	4b13      	ldr	r3, [pc, #76]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800085a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800085e:	60da      	str	r2, [r3, #12]
				break;
 8000860:	e035      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 7:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI7_PC;
 8000862:	4b11      	ldr	r3, [pc, #68]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000864:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000868:	60da      	str	r2, [r3, #12]
				break;
 800086a:	e030      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 8:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI8_PC;
 800086c:	4b0e      	ldr	r3, [pc, #56]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800086e:	2202      	movs	r2, #2
 8000870:	611a      	str	r2, [r3, #16]
				break;
 8000872:	e02c      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 9:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI9_PC;
 8000874:	4b0c      	ldr	r3, [pc, #48]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000876:	2220      	movs	r2, #32
 8000878:	611a      	str	r2, [r3, #16]
				break;
 800087a:	e028      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 10:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI10_PC;
 800087c:	4b0a      	ldr	r3, [pc, #40]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800087e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000882:	611a      	str	r2, [r3, #16]
				break;
 8000884:	e023      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 11:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI11_PC;
 8000886:	4b08      	ldr	r3, [pc, #32]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000888:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800088c:	611a      	str	r2, [r3, #16]
				break;
 800088e:	e01e      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 12:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI12_PC;
 8000890:	4b05      	ldr	r3, [pc, #20]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 8000892:	2202      	movs	r2, #2
 8000894:	615a      	str	r2, [r3, #20]
				break;
 8000896:	e01a      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 13:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI13_PC;
 8000898:	4b03      	ldr	r3, [pc, #12]	; (80008a8 <configure_gpio_interrupt+0x2bc>)
 800089a:	2220      	movs	r2, #32
 800089c:	615a      	str	r2, [r3, #20]
				break;
 800089e:	e016      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
 80008a0:	40021000 	.word	0x40021000
 80008a4:	40010800 	.word	0x40010800
 80008a8:	40010000 	.word	0x40010000
 80008ac:	40010c00 	.word	0x40010c00
 80008b0:	40011000 	.word	0x40011000
			case 14:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI14_PC;
 80008b4:	4b5c      	ldr	r3, [pc, #368]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 80008b6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80008ba:	615a      	str	r2, [r3, #20]
				break;
 80008bc:	e007      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			case 15:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI15_PC;
 80008be:	4b5a      	ldr	r3, [pc, #360]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 80008c0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80008c4:	615a      	str	r2, [r3, #20]
				break;
 80008c6:	e002      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
			default:
				break;
		}
	}
 80008c8:	bf00      	nop
 80008ca:	e000      	b.n	80008ce <configure_gpio_interrupt+0x2e2>
				break;
 80008cc:	bf00      	nop

	if(pGPIOx == GPIOD){
 80008ce:	68fb      	ldr	r3, [r7, #12]
 80008d0:	4a56      	ldr	r2, [pc, #344]	; (8000a2c <configure_gpio_interrupt+0x440>)
 80008d2:	4293      	cmp	r3, r2
 80008d4:	d16e      	bne.n	80009b4 <configure_gpio_interrupt+0x3c8>
		switch(pinNumber)
 80008d6:	68bb      	ldr	r3, [r7, #8]
 80008d8:	2b0f      	cmp	r3, #15
 80008da:	d86d      	bhi.n	80009b8 <configure_gpio_interrupt+0x3cc>
 80008dc:	a201      	add	r2, pc, #4	; (adr r2, 80008e4 <configure_gpio_interrupt+0x2f8>)
 80008de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80008e2:	bf00      	nop
 80008e4:	08000925 	.word	0x08000925
 80008e8:	0800092d 	.word	0x0800092d
 80008ec:	08000935 	.word	0x08000935
 80008f0:	0800093f 	.word	0x0800093f
 80008f4:	08000949 	.word	0x08000949
 80008f8:	08000951 	.word	0x08000951
 80008fc:	08000959 	.word	0x08000959
 8000900:	08000963 	.word	0x08000963
 8000904:	0800096d 	.word	0x0800096d
 8000908:	08000975 	.word	0x08000975
 800090c:	0800097d 	.word	0x0800097d
 8000910:	08000987 	.word	0x08000987
 8000914:	08000991 	.word	0x08000991
 8000918:	08000999 	.word	0x08000999
 800091c:	080009a1 	.word	0x080009a1
 8000920:	080009ab 	.word	0x080009ab
		{
			case 0:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI0_PD;
 8000924:	4b40      	ldr	r3, [pc, #256]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 8000926:	2203      	movs	r2, #3
 8000928:	609a      	str	r2, [r3, #8]
				break;
 800092a:	e046      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 1:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI1_PD;
 800092c:	4b3e      	ldr	r3, [pc, #248]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 800092e:	2230      	movs	r2, #48	; 0x30
 8000930:	609a      	str	r2, [r3, #8]
				break;
 8000932:	e042      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 2:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI2_PD;
 8000934:	4b3c      	ldr	r3, [pc, #240]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 8000936:	f44f 7240 	mov.w	r2, #768	; 0x300
 800093a:	609a      	str	r2, [r3, #8]
				break;
 800093c:	e03d      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 3:
				AFIO->EXTICR[0] = AFIO_EXTICR1_EXTI3_PD;
 800093e:	4b3a      	ldr	r3, [pc, #232]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 8000940:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 8000944:	609a      	str	r2, [r3, #8]
				break;
 8000946:	e038      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 4:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI4_PD;
 8000948:	4b37      	ldr	r3, [pc, #220]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 800094a:	2203      	movs	r2, #3
 800094c:	60da      	str	r2, [r3, #12]
				break;
 800094e:	e034      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 5:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI5_PD;
 8000950:	4b35      	ldr	r3, [pc, #212]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 8000952:	2230      	movs	r2, #48	; 0x30
 8000954:	60da      	str	r2, [r3, #12]
				break;
 8000956:	e030      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 6:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI6_PD;
 8000958:	4b33      	ldr	r3, [pc, #204]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 800095a:	f44f 7240 	mov.w	r2, #768	; 0x300
 800095e:	60da      	str	r2, [r3, #12]
				break;
 8000960:	e02b      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 7:
				AFIO->EXTICR[1] = AFIO_EXTICR2_EXTI7_PD;
 8000962:	4b31      	ldr	r3, [pc, #196]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 8000964:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 8000968:	60da      	str	r2, [r3, #12]
				break;
 800096a:	e026      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 8:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI8_PD;
 800096c:	4b2e      	ldr	r3, [pc, #184]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 800096e:	2203      	movs	r2, #3
 8000970:	611a      	str	r2, [r3, #16]
				break;
 8000972:	e022      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 9:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI9_PD;
 8000974:	4b2c      	ldr	r3, [pc, #176]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 8000976:	2230      	movs	r2, #48	; 0x30
 8000978:	611a      	str	r2, [r3, #16]
				break;
 800097a:	e01e      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 10:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI10_PD;
 800097c:	4b2a      	ldr	r3, [pc, #168]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 800097e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8000982:	611a      	str	r2, [r3, #16]
				break;
 8000984:	e019      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 11:
				AFIO->EXTICR[2] = AFIO_EXTICR3_EXTI11_PD;
 8000986:	4b28      	ldr	r3, [pc, #160]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 8000988:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 800098c:	611a      	str	r2, [r3, #16]
				break;
 800098e:	e014      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 12:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI12_PD;
 8000990:	4b25      	ldr	r3, [pc, #148]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 8000992:	2203      	movs	r2, #3
 8000994:	615a      	str	r2, [r3, #20]
				break;
 8000996:	e010      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 13:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI13_PD;
 8000998:	4b23      	ldr	r3, [pc, #140]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 800099a:	2230      	movs	r2, #48	; 0x30
 800099c:	615a      	str	r2, [r3, #20]
				break;
 800099e:	e00c      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 14:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI14_PD;
 80009a0:	4b21      	ldr	r3, [pc, #132]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 80009a2:	f44f 7240 	mov.w	r2, #768	; 0x300
 80009a6:	615a      	str	r2, [r3, #20]
				break;
 80009a8:	e007      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			case 15:
				AFIO->EXTICR[3] = AFIO_EXTICR4_EXTI15_PD;
 80009aa:	4b1f      	ldr	r3, [pc, #124]	; (8000a28 <configure_gpio_interrupt+0x43c>)
 80009ac:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 80009b0:	615a      	str	r2, [r3, #20]
				break;
 80009b2:	e002      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
			default:
				break;
		}


	}
 80009b4:	bf00      	nop
 80009b6:	e000      	b.n	80009ba <configure_gpio_interrupt+0x3ce>
				break;
 80009b8:	bf00      	nop


	if(edge == RISING_EDGE)
 80009ba:	79fb      	ldrb	r3, [r7, #7]
 80009bc:	2b00      	cmp	r3, #0
 80009be:	d109      	bne.n	80009d4 <configure_gpio_interrupt+0x3e8>
		EXTI->RTSR |= 1 << pinNumber;
 80009c0:	4b1b      	ldr	r3, [pc, #108]	; (8000a30 <configure_gpio_interrupt+0x444>)
 80009c2:	689b      	ldr	r3, [r3, #8]
 80009c4:	2101      	movs	r1, #1
 80009c6:	68ba      	ldr	r2, [r7, #8]
 80009c8:	fa01 f202 	lsl.w	r2, r1, r2
 80009cc:	4611      	mov	r1, r2
 80009ce:	4a18      	ldr	r2, [pc, #96]	; (8000a30 <configure_gpio_interrupt+0x444>)
 80009d0:	430b      	orrs	r3, r1
 80009d2:	6093      	str	r3, [r2, #8]
	if(edge == FALLING_EDGE)
 80009d4:	79fb      	ldrb	r3, [r7, #7]
 80009d6:	2b01      	cmp	r3, #1
 80009d8:	d109      	bne.n	80009ee <configure_gpio_interrupt+0x402>
		EXTI->FTSR |= 1 << pinNumber;
 80009da:	4b15      	ldr	r3, [pc, #84]	; (8000a30 <configure_gpio_interrupt+0x444>)
 80009dc:	68db      	ldr	r3, [r3, #12]
 80009de:	2101      	movs	r1, #1
 80009e0:	68ba      	ldr	r2, [r7, #8]
 80009e2:	fa01 f202 	lsl.w	r2, r1, r2
 80009e6:	4611      	mov	r1, r2
 80009e8:	4a11      	ldr	r2, [pc, #68]	; (8000a30 <configure_gpio_interrupt+0x444>)
 80009ea:	430b      	orrs	r3, r1
 80009ec:	60d3      	str	r3, [r2, #12]
	if(edge == RISING_FALLING_EDGE){
 80009ee:	79fb      	ldrb	r3, [r7, #7]
 80009f0:	2b02      	cmp	r3, #2
 80009f2:	d113      	bne.n	8000a1c <configure_gpio_interrupt+0x430>
		EXTI->RTSR |= 1 << pinNumber;
 80009f4:	4b0e      	ldr	r3, [pc, #56]	; (8000a30 <configure_gpio_interrupt+0x444>)
 80009f6:	689b      	ldr	r3, [r3, #8]
 80009f8:	2101      	movs	r1, #1
 80009fa:	68ba      	ldr	r2, [r7, #8]
 80009fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000a00:	4611      	mov	r1, r2
 8000a02:	4a0b      	ldr	r2, [pc, #44]	; (8000a30 <configure_gpio_interrupt+0x444>)
 8000a04:	430b      	orrs	r3, r1
 8000a06:	6093      	str	r3, [r2, #8]
		EXTI->FTSR |= 1 << pinNumber;
 8000a08:	4b09      	ldr	r3, [pc, #36]	; (8000a30 <configure_gpio_interrupt+0x444>)
 8000a0a:	68db      	ldr	r3, [r3, #12]
 8000a0c:	2101      	movs	r1, #1
 8000a0e:	68ba      	ldr	r2, [r7, #8]
 8000a10:	fa01 f202 	lsl.w	r2, r1, r2
 8000a14:	4611      	mov	r1, r2
 8000a16:	4a06      	ldr	r2, [pc, #24]	; (8000a30 <configure_gpio_interrupt+0x444>)
 8000a18:	430b      	orrs	r3, r1
 8000a1a:	60d3      	str	r3, [r2, #12]
	}


}
 8000a1c:	bf00      	nop
 8000a1e:	3714      	adds	r7, #20
 8000a20:	46bd      	mov	sp, r7
 8000a22:	bc80      	pop	{r7}
 8000a24:	4770      	bx	lr
 8000a26:	bf00      	nop
 8000a28:	40010000 	.word	0x40010000
 8000a2c:	40011400 	.word	0x40011400
 8000a30:	40010400 	.word	0x40010400

08000a34 <enable_gpio_interrupt>:

void enable_gpio_interrupt(uint32_t pinNumber, IRQn_Type irqNumber){
 8000a34:	b580      	push	{r7, lr}
 8000a36:	b082      	sub	sp, #8
 8000a38:	af00      	add	r7, sp, #0
 8000a3a:	6078      	str	r0, [r7, #4]
 8000a3c:	460b      	mov	r3, r1
 8000a3e:	70fb      	strb	r3, [r7, #3]

	//enable interrupt in EXTI
	EXTI->IMR |= 1 << pinNumber;
 8000a40:	4b09      	ldr	r3, [pc, #36]	; (8000a68 <enable_gpio_interrupt+0x34>)
 8000a42:	681b      	ldr	r3, [r3, #0]
 8000a44:	2101      	movs	r1, #1
 8000a46:	687a      	ldr	r2, [r7, #4]
 8000a48:	fa01 f202 	lsl.w	r2, r1, r2
 8000a4c:	4611      	mov	r1, r2
 8000a4e:	4a06      	ldr	r2, [pc, #24]	; (8000a68 <enable_gpio_interrupt+0x34>)
 8000a50:	430b      	orrs	r3, r1
 8000a52:	6013      	str	r3, [r2, #0]
	//enable interrupt in NVIC
	NVIC_EnableIRQ(irqNumber);
 8000a54:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8000a58:	4618      	mov	r0, r3
 8000a5a:	f7ff fbe9 	bl	8000230 <__NVIC_EnableIRQ>
}
 8000a5e:	bf00      	nop
 8000a60:	3708      	adds	r7, #8
 8000a62:	46bd      	mov	sp, r7
 8000a64:	bd80      	pop	{r7, pc}
 8000a66:	bf00      	nop
 8000a68:	40010400 	.word	0x40010400

08000a6c <clear_gpio_interrupt>:

void clear_gpio_interrupt(uint32_t pinNumber){
 8000a6c:	b480      	push	{r7}
 8000a6e:	b083      	sub	sp, #12
 8000a70:	af00      	add	r7, sp, #0
 8000a72:	6078      	str	r0, [r7, #4]

	EXTI->PR |= (1 << pinNumber);
 8000a74:	4b07      	ldr	r3, [pc, #28]	; (8000a94 <clear_gpio_interrupt+0x28>)
 8000a76:	695b      	ldr	r3, [r3, #20]
 8000a78:	2101      	movs	r1, #1
 8000a7a:	687a      	ldr	r2, [r7, #4]
 8000a7c:	fa01 f202 	lsl.w	r2, r1, r2
 8000a80:	4611      	mov	r1, r2
 8000a82:	4a04      	ldr	r2, [pc, #16]	; (8000a94 <clear_gpio_interrupt+0x28>)
 8000a84:	430b      	orrs	r3, r1
 8000a86:	6153      	str	r3, [r2, #20]
}
 8000a88:	bf00      	nop
 8000a8a:	370c      	adds	r7, #12
 8000a8c:	46bd      	mov	sp, r7
 8000a8e:	bc80      	pop	{r7}
 8000a90:	4770      	bx	lr
 8000a92:	bf00      	nop
 8000a94:	40010400 	.word	0x40010400

08000a98 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000a98:	480d      	ldr	r0, [pc, #52]	; (8000ad0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000a9a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000a9c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000aa0:	480c      	ldr	r0, [pc, #48]	; (8000ad4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000aa2:	490d      	ldr	r1, [pc, #52]	; (8000ad8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000aa4:	4a0d      	ldr	r2, [pc, #52]	; (8000adc <LoopForever+0xe>)
  movs r3, #0
 8000aa6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000aa8:	e002      	b.n	8000ab0 <LoopCopyDataInit>

08000aaa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000aaa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000aac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000aae:	3304      	adds	r3, #4

08000ab0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000ab0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000ab2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000ab4:	d3f9      	bcc.n	8000aaa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000ab6:	4a0a      	ldr	r2, [pc, #40]	; (8000ae0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000ab8:	4c0a      	ldr	r4, [pc, #40]	; (8000ae4 <LoopForever+0x16>)
  movs r3, #0
 8000aba:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000abc:	e001      	b.n	8000ac2 <LoopFillZerobss>

08000abe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000abe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000ac0:	3204      	adds	r2, #4

08000ac2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000ac2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000ac4:	d3fb      	bcc.n	8000abe <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000ac6:	f000 f811 	bl	8000aec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000aca:	f7ff fb51 	bl	8000170 <main>

08000ace <LoopForever>:

LoopForever:
  b LoopForever
 8000ace:	e7fe      	b.n	8000ace <LoopForever>
  ldr   r0, =_estack
 8000ad0:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000ad4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000ad8:	20000040 	.word	0x20000040
  ldr r2, =_sidata
 8000adc:	08000b54 	.word	0x08000b54
  ldr r2, =_sbss
 8000ae0:	20000040 	.word	0x20000040
  ldr r4, =_ebss
 8000ae4:	2000005c 	.word	0x2000005c

08000ae8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000ae8:	e7fe      	b.n	8000ae8 <ADC1_2_IRQHandler>
	...

08000aec <__libc_init_array>:
 8000aec:	b570      	push	{r4, r5, r6, lr}
 8000aee:	2600      	movs	r6, #0
 8000af0:	4d0c      	ldr	r5, [pc, #48]	; (8000b24 <__libc_init_array+0x38>)
 8000af2:	4c0d      	ldr	r4, [pc, #52]	; (8000b28 <__libc_init_array+0x3c>)
 8000af4:	1b64      	subs	r4, r4, r5
 8000af6:	10a4      	asrs	r4, r4, #2
 8000af8:	42a6      	cmp	r6, r4
 8000afa:	d109      	bne.n	8000b10 <__libc_init_array+0x24>
 8000afc:	f000 f81a 	bl	8000b34 <_init>
 8000b00:	2600      	movs	r6, #0
 8000b02:	4d0a      	ldr	r5, [pc, #40]	; (8000b2c <__libc_init_array+0x40>)
 8000b04:	4c0a      	ldr	r4, [pc, #40]	; (8000b30 <__libc_init_array+0x44>)
 8000b06:	1b64      	subs	r4, r4, r5
 8000b08:	10a4      	asrs	r4, r4, #2
 8000b0a:	42a6      	cmp	r6, r4
 8000b0c:	d105      	bne.n	8000b1a <__libc_init_array+0x2e>
 8000b0e:	bd70      	pop	{r4, r5, r6, pc}
 8000b10:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b14:	4798      	blx	r3
 8000b16:	3601      	adds	r6, #1
 8000b18:	e7ee      	b.n	8000af8 <__libc_init_array+0xc>
 8000b1a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b1e:	4798      	blx	r3
 8000b20:	3601      	adds	r6, #1
 8000b22:	e7f2      	b.n	8000b0a <__libc_init_array+0x1e>
 8000b24:	08000b4c 	.word	0x08000b4c
 8000b28:	08000b4c 	.word	0x08000b4c
 8000b2c:	08000b4c 	.word	0x08000b4c
 8000b30:	08000b50 	.word	0x08000b50

08000b34 <_init>:
 8000b34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b36:	bf00      	nop
 8000b38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b3a:	bc08      	pop	{r3}
 8000b3c:	469e      	mov	lr, r3
 8000b3e:	4770      	bx	lr

08000b40 <_fini>:
 8000b40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b42:	bf00      	nop
 8000b44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b46:	bc08      	pop	{r3}
 8000b48:	469e      	mov	lr, r3
 8000b4a:	4770      	bx	lr
